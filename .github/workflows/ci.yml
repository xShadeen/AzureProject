name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}  # Cache Maven dependencies using the correct path to pom.xml
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: List contents of the backend directory (for debugging)
      run: ls -al ./Backend  # List the contents of the 'backend' directory

    - name: Build and Test with Maven
      run: mvn clean install
      working-directory: ./Backend  # Specify 'backend' as the working directory for Maven

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./Backend/target/surefire-reports  # Path to the test results in 'backend'

    - name: Build .jar artifact
      run: mvn package
      working-directory: ./Backend  # Run `mvn package` to create a .jar file

    - name: Upload the .jar artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: ./Backend/target/*.jar  # Upload the .jar file as an artifact

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build  # Ensure the build job has completed before deploying

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Azure CLI
  #     uses: azure/cli-action@v1
  #     with:
  #       azcliversion: '2.41.0'  # You can adjust the version as necessary

  # - name: Log in to Azure
  #   run: |
  #     echo "${{ secrets.AZURE_CREDENTIALS }}" | az login --service-principal --username $(echo ${{ secrets.AZURE_CLIENT_ID }}) --password $(echo ${{ secrets.AZURE_SECRET }}) --tenant $(echo ${{ secrets.AZURE_TENANT_ID }})

  # - name: Deploy to production slot
  #   run: |
  #     az spring app deploy \
  #       --name <twoja-aplikacja> \
  #       --resource-group <twoja-grupa-zasobów> \
  #       --service <nazwa-usługi-spring> \
  #       --slot production \
  #       --artifact-path ./Backend/target/<plik>.jar


